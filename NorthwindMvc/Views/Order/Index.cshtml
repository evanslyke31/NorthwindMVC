@model OrdersViewModel
@{
	ViewData["Title"] = "Index";
	Dictionary<string, int> order = new Dictionary<string, int>();
	foreach(Product product in Model.Products)
	{
		order[product.ProductID.ToString()] = 0;
	}
}

<div class="order-control">
	<link rel="stylesheet" href="~/css/item.css" />
	<span class="total"><b>Total: </b>$<span id="order-total">0.00</span></span>
	<div style="float:right;">
		<a asp-area="" asp-controller="Order" asp-action="Buy" class="btn btn-outline-primary">Order</a>
		<button onclick="clearOrders()" class="btn btn-outline-dark">clear order</button>
	</div>
</div>

<table class="table table-striped table-dark" style="width:100%;">
	<tr>
		<th>Name</th>
		<th>Quantity Per Unit</th>
		<th>Stock</th>
		<th>Price</th>
		<th>Quantity</th>
	</tr>
	@foreach (Product product in Model.Products)
	{
		<tr>
			<td>@product.ProductName</td>
			<td>@product.QuantityPerUnit</td>
			<td>@product.UnitsInStock</td>
			<td>@($"{product.UnitPrice:C}")</td>
			<td>
				<div class="amt-control">
					<button class="amt-minus" id="@product.ProductID-minus">-</button>
					<input type="text" value="0" id="@product.ProductID-amt" class="amt-text" onkeypress="return isNumberKey(event)" />
					<button class="amt-plus" id="@product.ProductID-plus">+</button>
				</div>
			</td>
		</tr>
	}
</table>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/js/product.js"></script>
<script type="text/javascript">
	order = @Html.Raw(Json.Serialize(order));
	products = @Html.Raw(Json.Serialize(Model.Products));
</script>